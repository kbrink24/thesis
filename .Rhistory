useshare1 <- lm_robust(
usecount ~ CV + CSV + log(moInc) + femalehh + totalplot + dist_fmarket + oninc,
hhcharsnew,
se_type = "stata"
)
summary(useshare1, diagnostics = T)
useshare2 <- lm_robust(
usecount ~ CV + CSV + log(mmoInc) + femalehh + totalplot + dist_fmarket + oninc,
hhchars,
se_type = "stata"
)
summary(useshare2, diagnostics = T)
useshare3 <- lm_robust(
usecount ~ CV + CSV + log(moInc) + log(mmoInc) + femalehh + totalplot + dist_fmarket + oninc,
hhcharsnew,
se_type = "stata"
)
summary(useshare3, diagnostics = T)
useshare4 <- lm_robust(
usecount ~ CV  + CSV*log(mmoInc) + femalehh + totalplot + dist_fmarket + oninc,
hhcharsnew,
se_type = "stata"
)
summary(useshare4, diagnostics = T)
texreg::texreg(
l = list(useshare1, useshare2, useshare3, useshare4),
stars = c(0.01, 0.05, 0.1),
include.ci = F,
caption.above = TRUE,
caption = "Predicting CSA Use Count",
# custom.model.names = c("Initial income", "Mean Income", "Both"),
# booktabs = TRUE,
# custom.header = list(
#   "OLS" = 1:4,
#   "IV, use count and CSA instrumented by CSV" = 5:9
# ),
# bold = 0.05,
custom.coef.names = c(
"Intercept",
"CV",
"CSV",
"Log Inital Income",
"Female Head",
"Total Plot Size",
"Distance to Market",
"On-Farm Income Share",
"Log Mean Income",
"CSV x Log Mean Income"
),
#  custom.note = "%stars.",
# siunitx = T
)
print(summary(cv.remiv1, diagnostics = T))
print(summary(cv.remiv2, diagnostics = T))
print(summary(cv.remiv3, diagnostics = T))
# print(summary(cv.remiv4, diagnostics = T))
print(summary(cv.remiv5, diagnostics = T))
print(summary(cv.remiv7, diagnostics = T))
print(summary(cv.remiv8, diagnostics = T))
print(summary(cv.remiv9, diagnostics = T))
print(summary(cv.remiv10a, diagnostics = T))
print(summary(cv.remiv11a, diagnostics = T))
library(ggplot2)
library(ggthemes)
library(ggridges)
# Poverty count by participation group====
p.pfcsap <- ggplot(hhchars, aes(x = povcount, fill = as.character(partGroup))) +
geom_bar() +
facet_wrap(~partGroup,
labeller = labeller(partGroup = partGroup.names)
) +
theme_fivethirtyeight() +
xlab("Number of Months Under Poverty Line") +
ylab("Number of Households") +
theme(legend.title = element_text(size=10, face="bold")) +
scale_fill_discrete(name = "Participation", labels = partGroup.names)
p.pfcsap
# participation group by initial income====
p.csapiinc <- Income %>% filter(dateFloor == "2019-03-01") %>%
ggplot(Income, mapping =  aes(x = CSA, y = log(moInc), group = CSA, fill = factor(CSA))) +
geom_boxplot() +
theme_fivethirtyeight()+
# theme(axis.title = element_text()) +
scale_x_discrete(name = "") +
theme(axis.title = element_text()) +
scale_fill_discrete(name = "CSA Participation", labels = CSA.names)+
labs(y = "Log Income (KSh)", fill = "CSA Participation",
title = "Initial Month Income, by CSA")
# xlab("Number of Months Under Poverty Line") +
# ylab("Number of Households") +
# theme(legend.title = element_text(size=10, face="bold"))
# + scale_fill_discrete(name = "Participation", labels = partGroup.names)
p.csapiinc
t.csapiinc <- Income %>% filter(dateFloor == "2019-03-01") %>%
group_by(CSA) %>%
summarise(mInc = mean(moInc),
medInc = median(moInc),
count = n())
# idk <- Income %>% filter(dateFloor == "2019-03-01") %>% median(obs)
t.csapiinc
# at.csapiinc <- aov()
# ct.csapiinc
# at.csapiinc <- aov(CSA ~ count
#                 , data = t.csapiinc)
# summary(at.csapiinc)
# # ant.cv <-
#   Anova(t.csapiinc, type = 2)
# quintile group by initial income====
p.qiinc <- Income %>%
ggplot(Income, mapping =  aes(x = quintile, y = log(moInc), group = quintile)) +
geom_boxplot() +
facet_grid(~dateFloor,
# labeller = labeller(dateFloor = month)
)+
geom_hline(yintercept = log(q[2]), color = "red") +
theme_fivethirtyeight()
# xlab("Number of Months Under Poverty Line") +
# ylab("Number of Households") +
# theme(legend.title = element_text(size=10, face="bold")) +
# scale_fill_discrete(name = "Participation", labels = partGroup.names)
p.qiinc
#Share of households by number of months spent under pov line, by CSA participation =====
# idk <- hhchars %>% group_by(partGroup) %>%  count(povcount)
#
# idk <- idk %>% mutate(gfreq = sum(n))
#
#
# p.spfcsap <- ggplot(idk, aes(x = povcount, y = n/gfreq, fill = as.character(partGroup))) +
#   geom_bar(position = "stack") +
#   theme_linedraw() +
#   xlab("Number of Months Under Poverty Line") +
#   ylab("Number of Households") +
#   theme(legend.title = element_text(size=10, face="bold")) +
#   scale_fill_discrete(name = "Participation", labels = partGroup.names)
#
# p.spfcsap
# =====
p.spfcsap <- ggplot(hhchars, aes(povcount, group = partGroup)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
theme_fivethirtyeight() +
scale_y_continuous(labels=scales::percent) +
facet_grid(~partGroup, labeller = labeller(partGroup = partGroup.names)) +
labs(y = "Relative Frequency", x = "Months in Poverty", fill = "Months",
title = "Duration in Poverty by Share of Houseolds, by CSA Participation")
p.spfcsap
#density version
p.spfcsapd <- ggplot(hhchars, aes(povcount, group = partGroup, color = factor(partGroup))) +
geom_density(
# alpha  = 1.5,
# position="stack",
adjust = 3/4
# 7/10
) +
theme_fivethirtyeight() +
# facet_grid(~partGroup, labeller = labeller(partGroup = partGroup.names)) +
labs(y = "Relative Frequency",
title = "Duration in Poverty by Share of Houseolds, by Participation",
x = "Months in Poverty") +
scale_color_discrete(name = "Pariticpation Group", labels = partGroup.names) +
scale_y_continuous(labels=scales::percent) +
theme(axis.title = element_text())
p.spfcsapd
# =====
#ridges
# p.spfcsapd <- ggplot(hhchars, aes(povcount, y = partGroup, color = factor(partGroup),fill = factor(partGroup))) +
#   geom_density_ridges() +
# theme_fivethirtyeight() +
# labs(y = "Relative Frequency",
#      title = "Duration in Poverty by Share of Houseolds, by CSA Participation",
#      x = "Months in Poverty") +
# scale_fill_discrete(name = "Pariticpation Group", labels = partGroup.names) +
# scale_y_continuous(labels=scales::percent) +
# theme(axis.title = element_text())
# p.spfcsapd
###Stacked Bar
p.spfstack <-
ggplot(hhchars, aes(povcount, group = partGroup, fill = factor(partGroup))) +
geom_bar(aes(y = ..prop..),position="stack", stat="count") +
scale_y_continuous(labels=scales::percent)
p.spfstack
p.spfstackq <-
ggplot(hhchars, aes(povcount, group = quintile, fill = factor(quintile))) +
geom_bar(aes(y = ..prop..),position="stack", stat="count") +
scale_y_continuous(labels=scales::percent)
p.spfstackq
#By only CSA
p.spfcsa <- ggplot(hhchars, aes(povcount, group = CSA)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
theme_fivethirtyeight() +
scale_y_continuous(labels=scales::percent) +
facet_grid(~CSA
, labeller = labeller(CSA = CSA.names)
) +
labs(y = "Relative Frequency", x = "Months in Poverty", fill = "Months",
title = "Duration in Poverty by Share of Houseolds, by CSA")
p.spfcsa
#density version
#danwidth set to 1/2 of default
p.spfcsad <- ggplot(hhchars, aes(povcount, group = CSA, fill = factor(CSA))) +
geom_density(alpha = 0.4,
adjust =
# 1/2
7/10) +
theme_fivethirtyeight() +
scale_y_continuous(labels=scales::percent) +
labs(y = "Relative Frequency", x = "Months in Poverty", fill = "CSA Participation",
title = "Duration in Poverty by Share of Houseolds, by CSA") +
scale_fill_discrete(name = "CSA Participation", labels = CSA.names) +
theme(axis.title = element_text())
p.spfcsad
p.spffhd <- ggplot(hhchars, aes(povcount, group = femalehh, fill = factor(femalehh))) +
geom_density(alpha = 0.4,
adjust =
# 1/2
7/10) +
theme_fivethirtyeight() +
scale_y_continuous(labels=scales::percent) +
labs(y = "Relative Frequency", x = "Months in Poverty", fill = "CSA Participation",
title = "Duration in Poverty by Share of Houseolds, by CSA") +
scale_fill_discrete(name = "CSA Participation", labels = c("Female", "Male")) +
theme(axis.title = element_text())
p.spffhd
#By only CSV
p.spfcsv <- ggplot(hhchars, aes(povcount, group = CSV)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
theme_fivethirtyeight() +
scale_y_continuous(labels=scales::percent) +
facet_grid(~CSV
, labeller = labeller(CSV = CSV.names)
) +
labs(y = "Relative Frequency", x = "Months in Poverty", fill = "Months",
title = "Duration in Poverty by Share of Houseolds, by CSV")
p.spfcsv
#density version
p.spfcsvd <- ggplot(hhchars, aes(povcount, group = CSV, fill = factor(CSV))) +
geom_density(alpha = 0.4, adjust =
# 1/2
7/10
) +
theme_fivethirtyeight() +
scale_y_continuous(labels=scales::percent) +
labs(y = "Relative Frequency", x = "Months in Poverty", fill = "Months",
title = "Duration in Poverty by Share of Houseolds, by CSV")
p.spfcsvd
#Share of households by number of months spent under pov line, by income quintile====
#create naming for quintiles
quintile.names <- c("First Quintile", "Second Quintile", "Third Quintile", "Fourth Quintile", "Fifth Quintile")
quintile.numbers <- 1:5
names(quintile.names) <- quintile.numbers
quintile.index <- data.frame(quintile.numbers, quintile.names)
p.spfq <- ggplot(hhchars, aes(povcount, group = quintile)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..), stat="count")) +
scale_y_continuous(labels=scales::percent) +
# theme_grey() +
facet_grid(~quintile, labeller = labeller(quintile = quintile.names)) +
labs(y = "Relative Frequency", x = "Months in Poverty", fill = "Months",
title = "Duration in Poverty by Share of Houseolds, by Income Quintile")
p.spfq
#Density
p.spfqd <-
ggplot(hhchars, aes(povcount, group = quintile, fill = factor(quintile))) +
geom_density(
alpha = 0.4,
adjust = 3 / 4) +
scale_y_continuous(labels = scales::percent) +
theme_fivethirtyeight() +
# facet_grid(~quintile, labeller = labeller(quintile = quintile.names)) +
labs(y = "Relative Frequency",
x = "Months in Poverty",
fill = "Quintile",
title = "Duration in Poverty by Share of Houseolds, by Income Quintile") +
scale_fill_discrete(name = "Quintile", labels = c("Poorest", "2nd", "3rd", "4th", "Richest")) +
theme(axis.title = element_text())
p.spfqds <-
ggplot(hhchars, aes(povcount, group = quintile, fill = factor(quintile))) +
geom_density(# alpha = 0.4,
position = "stack",
adjust = 3 / 4) +
scale_y_continuous(labels = scales::percent) +
theme_fivethirtyeight() +
# facet_grid(~quintile, labeller = labeller(quintile = quintile.names)) +
labs(y = "Relative Frequency",
x = "Months in Poverty",
fill = "Quintile",
title = "Duration in Poverty by Share of Houseolds, by Income Quintile") +
scale_fill_discrete(name = "Quintile", labels = c("Poorest", "2nd", "3rd", "4th", "Richest")) +
theme(axis.title = element_text())
# ggplot(hhchars, aes(povcount, group = CSV, fill = factor(CSV))) +
#   geom_density(alpha = 0.4, adjust = 1/2) +
#   theme_fivethirtyeight() +
#   scale_y_continuous(labels=scales::percent) +
#   labs(y = "Relative Frequency", x = "Months in Poverty", fill = "Months",
#        title = "Duration in Poverty by Share of Houseolds, by CSV")
p.spfqds
#Gridding both CSA and Quintile====
# p.spfcq <- ggplot(hhchars, aes(povcount)) +
#   geom_bar(aes(y = ..prop.., fill = factor(..x..), stat="count")) +
#   scale_y_continuous(labels=scales::percent) +
#   theme_fivethirtyeight() +
#   facet_grid(partGroup~quintile, labeller = labeller(quintile = quintile.names)) +
#   labs(y = "Relative Frequency", x = "Months in Poverty", fill = "Months",
#        title = "Duration in Poverty by Share of Houseolds")
# p.spfcq
#density version
# =====
p.spfcqd <- ggplot(hhchars, aes(povcount)) +
geom_density() +
scale_y_continuous(labels=scales::percent) +
theme_fivethirtyeight() +
facet_grid(partGroup~quintile, labeller = labeller(quintile = quintile.names)) +
labs(y = "Relative Frequency", x = "Months in Poverty", fill = "Months",
title = "Duration in Poverty by Share of Houseolds")
p.spfcqd
#CV by quintile group
p.pcvq <- ggplot(c.metrics, aes(x = CSA, y = mCV, fill=factor(CSA))) +
geom_bar(position = "dodge", stat = "identity") +
theme_fivethirtyeight() +
facet_grid(~quintile, labeller = labeller(quintile = quintile.names)) +
labs(y = "Mean CV", x = "Participation", fill = "CSA",
title = "Mean CV, by Income Quintile") +
scale_fill_discrete(name = "CSA Participation", labels = CSA.names) +
theme(axis.text.x=element_blank())
p.pcvq
p.pcvp <- ggplot(hhchars, aes(x = log(mmoInc), y = CV, color=factor(CSA))) +
geom_point(stat = "identity") +
geom_smooth(method = "lm") +
theme_fivethirtyeight() +
# facet_grid(~quintile, labeller = labeller(quintile = quintile.names)) +
labs(y = "Mean CV", x = "Income",
title = "Mean CV, by Income ") +
scale_fill_discrete(name = "CSA Participation", labels = CSA.names) +
theme(axis.text.x=element_blank())
p.pcvp
p.cvlogi <- ggplot(hhchars, aes(x =
log(mmoInc)
# usecount
, y = CV,
# color = factor(CSV)
)) +
geom_point() +
geom_smooth(method = "lm") +
theme_fivethirtyeight() +
labs(title = "Income to CV",y = "CV", x = "Log Mean Monthly Income", color = "CSV Status") +
scale_color_discrete(name = "CSV Status", labels = c("non-CSV", "CSV")) +
theme(axis.title = element_text())
p.cvlogi
#CV by participation group
p.pcvp <- ggplot(c.metrics, aes(x = quintile, y = mCV )) +
geom_bar(position = "dodge", stat = "identity") +
theme_fivethirtyeight() +
facet_grid(~CSA, labeller = labeller(CSA = CSA.names)) +
labs(y = "CV", x = "Income Quintile", fill = "Months",
title = "Mean CV, by income, grouped by participation")
p.pcvp
#CV by participation group
p.pcvcsv <- ggplot(c.metrics, aes(x = quintile, y = mCV, fill = factor(quintile) )) +
geom_bar(position = "dodge", stat = "identity") +
theme_fivethirtyeight() +
facet_grid(~CSV, labeller = labeller(CSV = CSV.names)) +
labs(y = "CV", x = "Income Quintile", fill = "Quintile",
title = "Mean CV, by income, grouped by CSV")  +
theme(axis.title = element_text())
p.pcvcsv
# table(hhchars$quintile, hhchars$CSV)
#CV by participation group
p.pcvcsa <- ggplot(c.metrics, aes(x = quintile, y = mCV, fill = factor(quintile) )) +
geom_bar(position = "dodge", stat = "identity") +
theme_fivethirtyeight() +
facet_grid(~CSA, labeller = labeller(CSA = CSA.names)) +
labs(y = "CV", x = "Income Quintile", fill = "Quintile",
title = "Mean CV, by income, by CSA participation")  +
theme(axis.title = element_text())
p.pcvcsa
# table(hhchars$quintile, hhchars$CSV)
#Non-grouped Cv, by quintile
p.cvq <- ggplot(c.metrics, aes(x = as.factor(quintile), y = mCV )) +
geom_bar(position = "dodge", stat = "identity", aes(fill = factor(quintile))) +
scale_x_discrete(labels = quintile.names) +
theme_fivethirtyeight() +
#   facet_grid(~partGroup, labeller = labeller(partGroup = partGroup.names)) +
labs(y = "CV", x = "Income Quintile", fill = "Quintile",
title = "Mean CV, by Quintile") +
theme(legend.position = "none")
# + legend(legend = FALSE)
p.cvq
#Non-grouped Cv, by partic
p.cvp <- ggplot(pg.metrics, aes(x = as.factor(partGroup), y = mCV )) +
geom_bar(position = "dodge", stat = "identity", aes(fill = factor(partGroup))) +
scale_x_discrete(labels = partGroup.names) +
theme_fivethirtyeight() +
labs(y = "CV", x = "Income Quintile", fill = "Months",
title = "Mean CV, by Participation Group") +
theme(legend.position='none')+
theme(axis.title = element_text())
p.cvp
#Mean CV by CSA
p.cvcsa <- ggplot(metrics.csa, aes(x = as.factor(CSA), y = mCV )) +
geom_bar(position = "dodge", stat = "identity", aes(fill = factor(CSA))) +
scale_x_discrete(labels = CSA.names) +
theme_fivethirtyeight() +
labs(y = "CV", x = "CSA Participation", fill = "Months",
title = "Mean CV, by CSA Group")  +
theme(legend.position='none')
p.cvcsa
#Mean CV by CSV
p.cvcsv <- ggplot(metrics.csv, aes(x = as.factor(CSV), y = mCV )) +
geom_bar(position = "dodge", stat = "identity", aes(fill = factor(CSV))) +
scale_x_discrete(labels = CSV.names) +
theme_fivethirtyeight() +
labs(y = "CV", fill = "Months",
title = "Mean CV, by CSV") +
theme(legend.position='none')
p.cvcsv
p.pfcv <- ggplot(hhchars, mapping =  aes(x = povcount, y = CV, group = povcount)) +
geom_boxplot()  +
theme_fivethirtyeight() +
geom_smooth(method='lm'
# , aes(group=1)
# , formula = y~poly(x,3)
) +
# scale_y_continuous(labels=scales::percent) +
# facet_grid(~partGroup
# , labeller = labeller(partGroup = partGroup.names)) +
labs(y = "CV", x = "Months in Poverty", fill = "Months",
title = "CV by Poverty Persistence")
p.pfcv
p.pfmcv <- ggplot(hhchars, mapping =  aes(x = povshare, y = CV)) +
geom_point(stat = 'identity', aes(color = factor(partGroup)))  +
theme_fivethirtyeight() +
geom_smooth(method='lm'
# , aes(group=1)
# , formula = y~poly(x,3)
) +
scale_x_continuous(labels=scales::percent) +
scale_y_continuous(labels=scales::percent) +
# facet_grid(~partGroup
# , labeller = labeller(partGroup = partGroup.names)) +
labs(y = "CV", x = "Share of Months in Poverty", fill = "Months",
title = "CV by Poverty Persistence")
p.pfmcv
# CV by Poverty Persistence
p.pfcvd <- ggplot(hhchars, aes(x = povcount, y = CV)) +
geom_point(stat = 'identity', aes(color = factor(partGroup))) +
# theme_fivethirtyeight() +
geom_smooth(method='lm'
# , formula = y~poly(x,3)
) +
facet_grid(~partGroup
, labeller = labeller(partGroup = partGroup.names)) +
labs(y = "CV", x = "Months in Poverty", fill = "Months",
title = "CV by Poverty Persistence")
p.pfcvd
p.mmicv <- ggplot(hhchars, aes(x = log(mmoInc), y = CV)) +
geom_point(stat = 'identity', aes(color = factor(partGroup))) +
theme_fivethirtyeight() +
# facet_grid(~partGroup
# , labeller = labeller(partGroup = partGroup.names)) +
geom_smooth(method='lm'
, formula = y~poly(x,1)
) +
labs(y = "CV", x = "Income", fill = "Months",
title = "CV by log Mean Income")
p.mmicv
p.mmipf <- ggplot(hhchars, mapping =  aes(y = log(mmoInc), x = povcount, group = povcount)) +
geom_boxplot() +
theme_fivethirtyeight() +
# facet_grid(~partGroup
# , labeller = labeller(partGroup = partGroup.names)) +
geom_smooth(method='lm'
, formula = y~poly(x,1)
) +
labs(y = "CV", x = "Income", fill = "Months",
title = "Poverty persistence by log Mean Income")
p.mmipf
p.mipf <- ggplot(Income, mapping =  aes(y = log(moInc), x = povcount, group = povcount)) +
geom_boxplot() +
theme_fivethirtyeight() +
# facet_grid(~partGroup
# , labeller = labeller(partGroup = partGroup.names)) +
geom_smooth(method='lm'
, formula = y~poly(x,1), aes(fill = "blue")
) +
labs(y = "CV", x = "Income", fill = "Months",
title = "Poverty persistence by log Income")
p.mipf
p.qcv <- ggplot(hhchars, mapping =  aes(y = CV, x = quintile, group = quintile)) +
geom_boxplot() +
theme_fivethirtyeight() +
# facet_grid(~partGroup
# , labeller = labeller(partGroup = partGroup.names)) +
labs(y = "CV", x = "Quintile",
title = "CV by Quintile")
p.qcv
citation()
citation("dplyr")
citation("tidyr")
citation("knitr")
citation("ggplot2")
citation("haven")
citation("ggthemes")
citation("car")
citation("estimatr")
citation()
View(idfk)
View(idfk)
View(idkt)
View(t.bl)
View(pt.9)
View(waldCSA)
View(p.spffhd)
View(p.spfcqd)
View(p.pfcsap)
